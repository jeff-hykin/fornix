#!/usr/bin/env bash
# 
# hooks
#
__temp_var__githooks_folder="$PROJECTR_COMMANDS_FOLDER/#events/git/"

# if the folder exists
if [ -d "$__temp_var__githooks_folder" ]
then
    # iterate over the items
    @ file_system/items_in "settings" | while read -d "$(printf '\0')" item
    do
        if [ -d "$item" ]
        then
            __temp_var__hook_name="$(basename "$item")"
            __temp_var__escaped_name="$(@ string/escape_shell_argument "$__temp_var__hook_name")"
            __temp_var__git_file="$PROJECTR_FOLDER/.git/hooks/$__temp_var__hook_name"
            @ file_system/ensure_file "$__temp_var__git_file"
            
            cat "$__temp_var__git_file" | grep "# \[start projectr-hooks\]" 2>/dev/null || @ string/unindent "$(echo '
                # [start projectr-hooks]
                # (autogenerated)
                if [ -n "$PROJECTR_FOLDER" ]
                then
                    absolute_path () {
                        echo "$(builtin cd "$(dirname "$1")"; pwd)/$(basename "$1")"
                    }
                    
                    __temp_var__folder=\"\$PROJECTR_FOLDER/settings/git/hooks/\"'"$__temp_var__escaped_name"'
                    find "$__temp_var__folder" -maxdepth 1 ! -path . -print0 2>/dev/null | sort -z | while read -d "$(printf '"'"'\0'"'"')" hook
                    do
                        # check if file exists
                        if [ -f "$hook" ]
                        then
                            hook="$(absolute_path "$hook")"
                            chmod ugo+x "$hook" 2>/dev/null || sudo chmod ugo+x "$hook"
                            "$hook" || echo "problem running: $hook"
                        fi
                    done
                    unset __temp_var__folder
                    unset hook
                fi
                # [end projectr-hooks]
            ')" "                " >> "$__temp_var__git_file"
            @ filesystem/ensure_executable "$__temp_var__git_file"
            unset __temp_var__escaped_name
            unset __temp_var__git_file
            unset __temp_var__hook_name
        fi
    done
fi

unset __temp_var__hook_name
unset __temp_var__escaped_name
unset __temp_var__git_file
unset __temp_var__githooks_folder