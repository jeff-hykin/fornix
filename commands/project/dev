#!/usr/bin/env -S deno run --allow-all

import { Console } from "https://deno.land/x/quickr@0.3.13/main/console.js"
import { FileSystem } from "https://deno.land/x/quickr@0.3.13/main/file_system.js"
import { run, Overwrite, Cwd } from "https://deno.land/x/quickr@0.3.13/main/run.js"
import { projectSettings, tauriSettings, createWorkspace, server, frontendFolder, compiledFrontendFolder, tauriSrc } from "../../tauri_support/generate_workspace.js"

// initial compile (includes compiling frontend)
await createWorkspace()

// 
// make sure tauri installed
// 
await run('cargo', "install", "--path", ".", Cwd(tauriSrc))

// start compiling the binary
await Deno.chdir(FileSystem.parentPath(tauriSrc))
const tauriProcess = run('cargo', "tauri", "dev", ...Deno.args)

// 
// start dev server that tauri will try to connect to
// 
console.log("Attempting to extract port# from tauri.conf.json .build.devPath")
try {
    const port = tauriSettings.build.devPath.match(/:(\d+)$/)[1]-0
    console.debug(`port is:`,port)
    server({port, folder: compiledFrontendFolder })
} catch (error) {
    console.warn(`failed to start dev server:`, error)
}

// 
// re-compile the project when something changes
// 
for await (const { added, modified, deleted } of Deno.watchFs(frontendFolder)) {
    // const thingsToCompile = new Set([...added, ...modified])
    await createWorkspace(projectSettings.workspaceFolder)
}